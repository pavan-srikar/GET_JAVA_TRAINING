package exceptiondemo;

import java.util.Scanner;

/**
 * Author :Jetty.Srikar
 * Date :Sep 6, 2025
 * Time :3:57:11‚ÄØPM
 *project : projCoreJava
 */

public class ATMthrows {
	
	private double balance;
	
	public ATMthrows(double balance) {
		this.balance=balance;
	}
	// Method that may throw exception
		public void withdraw(double amount) throws ArithmeticException, IllegalArgumentException {
			if (amount > balance) {
				throw new ArithmeticException("‚ùå Insufficient Balance! Available: ‚Çπ" + balance);
			} else if (amount <= 0) {
				throw new IllegalArgumentException("‚ùå Withdrawal amount must be greater than 0.");
			}
			balance -= amount;
			System.out.println("‚úÖ Withdrawal Successful! Amount: ‚Çπ" + amount);
			System.out.println("üí∞ Remaining Balance: ‚Çπ" + balance);
		}
	
	
	
	public static void main(String[] args) {
		 Scanner sc = new Scanner(System.in);
		 ATMthrows atm = new ATMthrows(10000); // initial balance

			try {
				System.out.println("Enter withdrawal amount: ");
				double amount = sc.nextDouble();

				// Method call - must handle exception
				atm.withdraw(amount);

			} catch (ArithmeticException e) {
				System.out.println("Error: " + e.getMessage());
			} catch (IllegalArgumentException e) {
				System.out.println("Error: " + e.getMessage());
			} catch (Exception e) {
				System.out.println("Unexpected Error: " + e.getMessage());
			} finally {
				System.out.println("üîí Transaction session closed. Thank you for using our ATM!");
				sc.close();
			}

	}

}
